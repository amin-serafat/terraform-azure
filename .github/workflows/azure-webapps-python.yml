name: CI/CD Pipeline (Tag Trigger)

on:
  push:
    tags:
      - '*'

env:
  TF_WORKING_DIR: envs/dev
  ACR_NAME: amin                       
  WEBAPP_NAME: amin                     
  ACI_NAME: dev-aci                     
  RESOURCE_GROUP: rg-dev
  LOCATION: westeurope
  IMAGE_NAME: myapp
  IMAGE_TAG: ${{ github.ref_name }}

jobs:

  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Format & Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan

  build_and_push:
    name: Build & Push Image
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login (for ACR)
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
            -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            .

      - name: Push to ACR
        run: |
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy_webapp:
    name: Deploy Web App
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy_aci:
    name: Deploy ACI
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Instance
        run: |
          az container create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.ACI_NAME }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --cpu 1 --memory 1.5 \
            --dns-name-label ${{ env.ACI_NAME }} \
            --registry-login-server ${{ env.ACR_NAME }}.azurecr.io \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --restart-policy Always
